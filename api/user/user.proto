syntax = "proto3";

package github.constantine27k.crnt_user_service.api.user;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/Constantine27K/crnt-user-service/pkg/api/user;user";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "User";
		version: "0.1";
	};

	schemes: HTTP;
	consumes: "application/json";
	produces: "application/json";

	security_definitions: {
		security: {
			key: "Authorization";
			value: {
				type: TYPE_API_KEY;
				in: IN_HEADER;
				name: "Authorization";
			}
		}
	}
	security: {
		security_requirement: {
			key: "Authorization";
			value: {};
		}
	}
};

service UserRegistry {
	rpc CreateUser (UserCreateRequest) returns (UserCreateResponse) {
		option (google.api.http) = {
			post: "/v1/user"
			body: "*"
		};
	};
	rpc UpdateUser (UserUpdateRequest) returns (UserUpdateResponse) {
		option (google.api.http) = {
			put: "/v1/user/{id}"
			body: "*"
		};
	};
	rpc UpdateUserContacts (UserContactsUpdateRequest) returns (UserContactsUpdateResponse) {
		option (google.api.http) = {
			put: "/v1/user/{id}/contacts"
			body: "*"
		};
	};
	rpc GetUsers (UserGetRequest) returns (UserGetResponse) {
		option (google.api.http) = {
			get: "/v1/users"
		};
	};
	rpc GetUserByID (UserGetByIDRequest) returns (UserGetByIDResponse) {
		option (google.api.http) = {
			get: "/v1/user/{id}"
		};
	};
}

message User {
	int64 id = 1;
	string name = 2;
	string last_name = 3;
	string display_name = 4;
	string full_name = 5;
	google.protobuf.Timestamp birthday = 6;
	google.protobuf.Timestamp employed_at = 7;
	google.protobuf.Timestamp fired_at = 8;
	string about_info = 9;
	string avatar_url = 10;
	Contacts contacts = 11;
	double salary = 12;
	bool is_piece_wage = 13;
	int64 team = 14;
	int64 department = 15;
}

message Contacts {
	string phone_number = 1;
	string email = 2;
	string telegram_url = 3;
	string discord_url = 4;
}

message UserCreateRequest {
	User user = 1;
	Secret secret = 2;
}

message Secret {
	string login = 1;
	string password = 2;
	string role = 3;
}

message UserCreateResponse {
	int64  id = 1;
}

message UserUpdateRequest {
	int64 id = 1;
	User user = 2;
}

message UserUpdateResponse {
	int64 id = 1;
}

message UserContactsUpdateRequest {
	int64 id = 1;
	Contacts contacts = 2;
}

message UserContactsUpdateResponse {
	int64 id = 1;
}

message UserGetRequest {
	repeated int64 ids = 1;
	string names = 2;
	string last_name = 3;
	string display_name = 4;
	string full_name = 5;
	string email = 6;
	repeated int64 teams = 7;
	repeated int64 departments = 8;
}

message UserGetResponse {
	repeated User users = 1;
}

message UserGetByIDRequest {
	int64 id = 1;
}

message UserGetByIDResponse {
	User user = 1;
}
